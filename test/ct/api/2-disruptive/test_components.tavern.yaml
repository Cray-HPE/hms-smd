# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the Hardware State Manager (HSM) service API
# Author: Mitch Schooler
# Service: Hardware State Manager

# HMS test metrics test cases: TODO
# TODO. DELETE /State/Components API response code
# TODO. DELETE /State/Components API response body
# TODO. DELETE /State/Components No Components API response code
# TODO. DELETE /State/Components No Components API response body
# TODO. GET /State/Components No Components API response code
# TODO. GET /State/Components No Components API response body

# TODO. POST /State/Components Node API response code
# TODO. POST /State/Components Node API response body
# TODO. GET /State/Components API response code
# TODO. GET /State/Components API response body
# TODO. GET /State/Components?id={id} Node Parameter API response code
# TODO. GET /State/Components?id={id} Node Parameter API response body

# TODO. PUT /State/Components/{xname} Existing Node No Force API response code
# TODO. PUT /State/Components/{xname} Existing Node No Force API response body
# TODO. GET /State/Components/{xname} Node API response code
# TODO. GET /State/Components/{xname} Node API response body
# TODO. PUT /State/Components/{xname} Existing Node Force API response code
# TODO. PUT /State/Components/{xname} Existing Node Force API response body
# TODO. GET /State/Components/{xname} Node API response code
# TODO. GET /State/Components/{xname} Node API response body

# TODO. DELETE /State/Components/{xname} Node API response code
# TODO. DELETE /State/Components/{xname} Node API response body
# TODO. DELETE /State/Components/{xname} Missing Node API response code
# TODO. DELETE /State/Components/{xname} Missing Node API response body
# TODO. GET /State/Components/{xname} Missing Node API response code
# TODO. GET /State/Components/{xname} Missing Node API response body
# TODO. GET /State/Components/ByNID/{nid} Missing NID API response code
# TODO. GET /State/Components/ByNID/{nid} Missing NID API response body

# TODO. PUT /State/Components/{xname} Non-Existing Node API response code
# TODO. PUT /State/Components/{xname} Non-Existing Node API response body
# TODO. GET /State/Components/{xname} Node API response code
# TODO. GET /State/Components/{xname} Node API response body
# TODO. DELETE /State/Components API response code
# TODO. DELETE /State/Components API response body

# TODO. POST /State/Components NodeBMC API response code
# TODO. POST /State/Components NodeBMC API response body
# TODO. POST /State/Components NodeBMC Existing NodeBMC No Force API response code
# TODO. POST /State/Components NodeBMC Existing NodeBMC No Force API response body
# TODO. GET /State/Components/{xname} NodeBMC API response code
# TODO. GET /State/Components/{xname} NodeBMC API response body
# TODO. POST /State/Components NodeBMC Existing NodeBMC Force API response code
# TODO. POST /State/Components NodeBMC Existing NodeBMC Force API response body
# TODO. GET /State/Components/{xname} NodeBMC API response code
# TODO. GET /State/Components/{xname} NodeBMC API response body

# TODO. POST /State/Components Nodes API response code
# TODO. POST /State/Components Nodes API response body
# TODO. POST /State/Components NodeEnclosure API response code
# TODO. POST /State/Components NodeEnclosure API response body
# TODO. POST /State/Components RouterBMC and RouterModule API response code
# TODO. POST /State/Components RouterBMC and RouterModule API response body
# TODO. POST /State/Components Chassis and ChassisBMC API response code
# TODO. POST /State/Components Chassis and ChassisBMC API response body
# TODO. POST /State/Components HSNBoard and CabinetPDUController API response code
# TODO. POST /State/Components HSNBoard and CabinetPDUController API response body

# TODO. GET /State/Components?type={type} CabinetPDUController Parameter API response code
# TODO. GET /State/Components?type={type} CabinetPDUController Parameter API response body
# TODO. GET /State/Components?type={type} ChassisBMC Parameter API response code
# TODO. GET /State/Components?type={type} ChassisBMC Parameter API response body
# TODO. GET /State/Components?type={type} Chassis Parameter API response code
# TODO. GET /State/Components?type={type} Chassis Parameter API response body
# TODO. GET /State/Components?type={type} HSNBoard Parameter API response code
# TODO. GET /State/Components?type={type} HSNBoard Parameter API response body
# TODO. GET /State/Components?type={type} NodeBMC Parameter API response code
# TODO. GET /State/Components?type={type} NodeBMC Parameter API response body
# TODO. GET /State/Components?type={type} NodeEnclosure Parameter API response code
# TODO. GET /State/Components?type={type} NodeEnclosure Parameter API response body
# TODO. GET /State/Components?type={type} Node Parameter API response code
# TODO. GET /State/Components?type={type} Node Parameter API response body
# TODO. GET /State/Components?type={type} RouterBMC Parameter API response code
# TODO. GET /State/Components?type={type} RouterBMC Parameter API response body
# TODO. GET /State/Components?type={type} RouterModule Parameter API response code
# TODO. GET /State/Components?type={type} RouterModule Parameter API response body

# TODO. GET /State/Components?state={state} Unknown Parameter StateOnly API response code
# TODO. GET /State/Components?state={state} Unknown Parameter StateOnly API response body
# TODO. GET /State/Components?state={state} Empty Parameter API response code
# TODO. GET /State/Components?state={state} Empty Parameter API response body
# TODO. GET /State/Components?state={state} Populated Parameter API response code
# TODO. GET /State/Components?state={state} Populated Parameter API response body
# TODO. GET /State/Components?state={state} Off Parameter API response code
# TODO. GET /State/Components?state={state} Off Parameter API response body
# TODO. GET /State/Components?state={state} On Parameter API response code
# TODO. GET /State/Components?state={state} On Parameter API response body
# TODO. GET /State/Components?state={state} Standby Parameter API response code
# TODO. GET /State/Components?state={state} Standby Parameter API response body
# TODO. GET /State/Components?state={state} Halt Parameter API response code
# TODO. GET /State/Components?state={state} Halt Parameter API response body
# TODO. GET /State/Components?state={state} Ready Parameter API response code
# TODO. GET /State/Components?state={state} Ready Parameter API response body

# TODO. GET /State/Components?flag={flag} OK Parameter FlagOnly API response code
# TODO. GET /State/Components?flag={flag} OK Parameter FlagOnly API response body
# TODO. GET /State/Components?flag={flag} Warning Parameter API response code
# TODO. GET /State/Components?flag={flag} Warning Parameter API response body
# TODO. GET /State/Components?flag={flag} Alert Parameter API response code
# TODO. GET /State/Components?flag={flag} Alert Parameter API response body
# TODO. GET /State/Components?flag={flag} Locked Parameter API response code
# TODO. GET /State/Components?flag={flag} Locked Parameter API response body

# TODO. GET /State/Components?role={role} Compute Parameter RoleOnly API response code
# TODO. GET /State/Components?role={role} Compute Parameter RoleOnly API response body
# TODO. GET /State/Components?role={role} Service Parameter API response code
# TODO. GET /State/Components?role={role} Service Parameter API response body
# TODO. GET /State/Components?role={role} System Parameter API response code
# TODO. GET /State/Components?role={role} System Parameter API response body
# TODO. GET /State/Components?role={role} Application Parameter API response code
# TODO. GET /State/Components?role={role} Application Parameter API response body
# TODO. GET /State/Components?role={role} Storage Parameter API response code
# TODO. GET /State/Components?role={role} Storage Parameter API response body
# TODO. GET /State/Components?role={role} Management Parameter API response code
# TODO. GET /State/Components?role={role} Management Parameter API response body

# TODO. GET /State/Components?subrole={subrole} Master Parameter API response code
# TODO. GET /State/Components?subrole={subrole} Master Parameter API response body
# TODO. GET /State/Components?subrole={subrole} Worker Parameter API response code
# TODO. GET /State/Components?subrole={subrole} Worker Parameter API response body
# TODO. GET /State/Components?subrole={subrole} Storage Parameter API response code
# TODO. GET /State/Components?subrole={subrole} Storage Parameter API response body

# TODO. GET /State/Components?enabled={enabled} True Parameter API response code
# TODO. GET /State/Components?enabled={enabled} True Parameter API response body
# TODO. GET /State/Components?enabled={enabled} False Parameter API response code
# TODO. GET /State/Components?enabled={enabled} False Parameter API response body

# TODO. GET /State/Components?softwarestatus={softwarestatus} TestStatus Parameter API response code
# TODO. GET /State/Components?softwarestatus={softwarestatus} TestStatus Parameter API response body

# TODO. GET /State/Components?arch={arch} X86 Parameter API response code
# TODO. GET /State/Components?arch={arch} X86 Parameter API response body
# TODO. GET /State/Components?arch={arch} ARM Parameter API response code
# TODO. GET /State/Components?arch={arch} ARM Parameter API response body
# TODO. GET /State/Components?arch={arch} Other Parameter API response code
# TODO. GET /State/Components?arch={arch} Other Parameter API response body

# TODO. GET /State/Components?class={class} River Parameter API response code
# TODO. GET /State/Components?class={class} River Parameter API response body
# TODO. GET /State/Components?class={class} Mountain Parameter API response code
# TODO. GET /State/Components?class={class} Mountain Parameter API response body
# TODO. GET /State/Components?class={class} Hill Parameter API response code
# TODO. GET /State/Components?class={class} Hill Parameter API response body

# TODO. GET /State/Components?nid={nid} NID NidOnly Parameter API response code
# TODO. GET /State/Components?nid={nid} NID NidOnly Parameter API response body
# TODO. GET /State/Components?nid_start={nid_start} NID_Start Parameter API response code
# TODO. GET /State/Components?nid_start={nid_start} NID_Start Parameter API response body
# TODO. GET /State/Components?nid_start={nid_start}&nid_end={nid_end} NID_Start NID_End Parameters API response code
# TODO. GET /State/Components?nid_start={nid_start}&nid_end={nid_end} NID_Start NID_End Parameters API response body

# TODO. GET /State/Components Many Parameters Existing Node API response code
# TODO. GET /State/Components Many Parameters Existing Node API response body

# TODO. POST /State/Components/Query Existing Component API response code
# TODO. POST /State/Components/Query Existing Component API response body
# TODO. POST /State/Components/Query Type Node Existing Component API response code
# TODO. POST /State/Components/Query Type Node Existing Component API response body
# TODO. POST /State/Components/Query State Ready StateOnly Existing Component API response code
# TODO. POST /State/Components/Query State Ready StateOnly Existing Component API response body
# TODO. POST /State/Components/Query Flag OK FlagOnly Existing Component API response code
# TODO. POST /State/Components/Query Flag OK FlagOnly Existing Component API response body
# TODO. POST /State/Components/Query Enabled True Existing Component API response code
# TODO. POST /State/Components/Query Enabled True Existing Component API response body
# TODO. POST /State/Components/Query SoftwareStatus Existing Component API response code
# TODO. POST /State/Components/Query SoftwareStatus Existing Component API response body
# TODO. POST /State/Components/Query Role Compute RoleOnly Existing Component API response code
# TODO. POST /State/Components/Query Role Compute RoleOnly Existing Component API response body
# TODO. POST /State/Components/Query SubRole Master Existing Component API response code
# TODO. POST /State/Components/Query SubRole Master Existing Component API response body
# TODO. POST /State/Components/Query Arch X86 Existing Component API response code
# TODO. POST /State/Components/Query Arch X86 Existing Component API response body
# TODO. POST /State/Components/Query Class River Existing Component API response code
# TODO. POST /State/Components/Query Class River Existing Component API response body
# TODO. POST /State/Components/Query NID NidOnly Existing Component API response code
# TODO. POST /State/Components/Query NID NidOnly Existing Component API response body
# TODO. POST /State/Components/Query NID_Start Existing Component API response code
# TODO. POST /State/Components/Query NID_Start Existing Component API response body
# TODO. POST /State/Components/Query NID_Start NID_End Existing Component API response code
# TODO. POST /State/Components/Query NID_Start NID_End Existing Component API response body
# TODO. POST /State/Components/Query Many Parameters Existing Node API response code
# TODO. POST /State/Components/Query Many Parameters Existing Node API response body

# TODO. POST /State/Components/ByNID/Query Existing Component API response code
# TODO. POST /State/Components/ByNID/Query Existing Component API response body
# TODO. POST /State/Components/ByNID/Query Type Node Existing Component API response code
# TODO. POST /State/Components/ByNID/Query Type Node Existing Component API response body
# TODO. POST /State/Components/ByNID/Query State Ready StateOnly Existing Component API response code
# TODO. POST /State/Components/ByNID/Query State Ready StateOnly Existing Component API response body
# TODO. POST /State/Components/ByNID/Query Flag OK FlagOnly Existing Component API response code
# TODO. POST /State/Components/ByNID/Query Flag OK FlagOnly Existing Component API response body
# TODO. POST /State/Components/ByNID/Query Enabled True Existing Component API response code
# TODO. POST /State/Components/ByNID/Query Enabled True Existing Component API response body
# TODO. POST /State/Components/ByNID/Query SoftwareStatus Existing Component API response code
# TODO. POST /State/Components/ByNID/Query SoftwareStatus Existing Component API response body
# TODO. POST /State/Components/ByNID/Query Role Compute RoleOnly Existing Component API response code
# TODO. POST /State/Components/ByNID/Query Role Compute RoleOnly Existing Component API response body
# TODO. POST /State/Components/ByNID/Query SubRole Master Existing Component API response code
# TODO. POST /State/Components/ByNID/Query SubRole Master Existing Component API response body
# TODO. POST /State/Components/ByNID/Query Arch X86 Existing Component API response code
# TODO. POST /State/Components/ByNID/Query Arch X86 Existing Component API response body
# TODO. POST /State/Components/ByNID/Query Class River Existing Component API response code
# TODO. POST /State/Components/ByNID/Query Class River Existing Component API response body
# TODO. POST /State/Components/ByNID/Query NID NidOnly Existing Component API response code
# TODO. POST /State/Components/ByNID/Query NID NidOnly Existing Component API response body
# TODO. POST /State/Components/ByNID/Query NID_Start Existing Component API response code
# TODO. POST /State/Components/ByNID/Query NID_Start Existing Component API response body
# TODO. POST /State/Components/ByNID/Query NID_Start NID_End Existing Component API response code
# TODO. POST /State/Components/ByNID/Query NID_Start NID_End Existing Component API response body
# TODO. POST /State/Components/ByNID/Query Many Parameters Existing Node API response code
# TODO. POST /State/Components/ByNID/Query Many Parameters Existing Node API response body

# TODO. GET /State/Components/Query/{xname} Existing Component API response code
# TODO. GET /State/Components/Query/{xname} Existing Component API response body
# TODO. GET /State/Components/Query/{xname} Type Node Existing Component API response code
# TODO. GET /State/Components/Query/{xname} Type Node Existing Component API response body
# TODO. GET /State/Components/Query/{xname} State Ready StateOnly Existing Component API response code
# TODO. GET /State/Components/Query/{xname} State Ready StateOnly Existing Component API response body
# TODO. GET /State/Components/Query/{xname} Flag OK FlagOnly Existing Component API response code
# TODO. GET /State/Components/Query/{xname} Flag OK FlagOnly Existing Component API response body
# TODO. GET /State/Components/Query/{xname} Enabled True Existing Component API response code
# TODO. GET /State/Components/Query/{xname} Enabled True Existing Component API response body
# TODO. GET /State/Components/Query/{xname} SoftwareStatus Existing Component API response code
# TODO. GET /State/Components/Query/{xname} SoftwareStatus Existing Component API response body
# TODO. GET /State/Components/Query/{xname} Role Compute RoleOnly Existing Component API response code
# TODO. GET /State/Components/Query/{xname} Role Compute RoleOnly Existing Component API response body
# TODO. GET /State/Components/Query/{xname} SubRole Master Existing Component API response code
# TODO. GET /State/Components/Query/{xname} SubRole Master Existing Component API response body
# TODO. GET /State/Components/Query/{xname} Arch X86 Existing Component API response code
# TODO. GET /State/Components/Query/{xname} Arch X86 Existing Component API response body
# TODO. GET /State/Components/Query/{xname} Class River Existing Component API response code
# TODO. GET /State/Components/Query/{xname} Class River Existing Component API response body
# TODO. GET /State/Components/Query/{xname} NID NidOnly Existing Component API response code
# TODO. GET /State/Components/Query/{xname} NID NidOnly Existing Component API response body
# TODO. GET /State/Components/Query/{xname} NID_Start Existing Component API response code
# TODO. GET /State/Components/Query/{xname} NID_Start Existing Component API response body
# TODO. GET /State/Components/Query/{xname} NID_Start NID_End Existing Component API response code
# TODO. GET /State/Components/Query/{xname} NID_Start NID_End Existing Component API response body
# TODO. GET /State/Components/Query/{xname} Many Parameters Existing Node API response code
# TODO. GET /State/Components/Query/{xname} Many Parameters Existing Node API response body

# TODO. GET /State/Components/ByNID/{nid} Existing NodeA API response code
# TODO. GET /State/Components/ByNID/{nid} Existing NodeA API response body
# TODO. GET /State/Components/ByNID/{nid} Exisitng NodeB API response code
# TODO. GET /State/Components/ByNID/{nid} Existing NodeB API response body

# TODO. POST /State/Components Nodes For Bulk Updates API response code
# TODO. POST /State/Components Nodes For Bulk Updates API response body

# TODO. PATCH /State/Components/BulkStateData Nodes State Flag API response code
# TODO. PATCH /State/Components/BulkStateData Nodes State Flag API response body
# TODO. GET /State/Components/{xname} Updated BulkStateData NodeA API response code
# TODO. GET /State/Components/{xname} Updated BulkStateData NodeA API response body
# TODO. GET /State/Components/{xname} Updated BulkStateData NodeB API response code
# TODO. GET /State/Components/{xname} Updated BulkStateData NodeB API response body
# TODO. GET /State/Components/{xname} Non-Updated BulkStateData Node API response code
# TODO. GET /State/Components/{xname} Non-Updated BulkStateData Node API response body

# TODO. PATCH /State/Components/{xname}/StateData Node State No Flag API response code
# TODO. PATCH /State/Components/{xname}/StateData Node State No Flag API response body
# TODO. GET /State/Components?stateonly=True Updated Node API response code
# TODO. GET /State/Components?stateonly=True Updated Node API response body
# TODO. GET /State/Components?flagonly=True Updated Node API response code
# TODO. GET /State/Components?flagonly=True Updated Node API response body
# TODO. GET /State/Components?roleonly=True Updated Node API response code
# TODO. GET /State/Components?roleonly=True Updated Node API response body
# TODO. GET /State/Components?nidonly=True Updated Node API response code
# TODO. GET /State/Components?nidonly=True Updated Node API response body

# TODO. PATCH /State/Components/BulkFlagOnly Nodes API response code
# TODO. PATCH /State/Components/BulkFlagOnly Nodes API response body
# TODO. GET /State/Components/{xname} Updated BulkFlagOnly NodeA API response code
# TODO. GET /State/Components/{xname} Updated BulkFlagOnly NodeA API response body
# TODO. GET /State/Components/{xname} Updated BulkFlagOnly NodeB API response code
# TODO. GET /State/Components/{xname} Updated BulkFlagOnly NodeB API response body
# TODO. GET /State/Components/{xname} Non-Updated BulkFlagOnly Node API response code
# TODO. GET /State/Components/{xname} Non-Updated BulkFlagOnly Node API response body

# TODO. PATCH /State/Components/{xname}/FlagOnly Node API response code
# TODO. PATCH /State/Components/{xname}/FlagOnly Node API response body
# TODO. GET /State/Components?flagonly=True Updated Node API response code
# TODO. GET /State/Components?flagonly=True Updated Node API response body

# TODO. PATCH /State/Components/BulkEnabled Nodes API response code
# TODO. PATCH /State/Components/BulkEnabled Nodes API response body
# TODO. GET /State/Components/{xname} Updated BulkEnabled NodeA API response code
# TODO. GET /State/Components/{xname} Updated BulkEnabled NodeA API response body
# TODO. GET /State/Components/{xname} Updated BulkEnabled NodeB API response code
# TODO. GET /State/Components/{xname} Updated BulkEnabled NodeB API response body
# TODO. GET /State/Components/{xname} Non-Updated BulkEnabled Node API response code
# TODO. GET /State/Components/{xname} Non-Updated BulkEnabled Node API response body

# TODO. PATCH /State/Components/{xname}/Enabled Node API response code
# TODO. PATCH /State/Components/{xname}/Enabled Node API response body
# TODO. GET /State/Components/{xname} Updated Enabled Node API response code
# TODO. GET /State/Components/{xname} Updated Enabled Node API response body

# TODO. PATCH /State/Components/BulkSoftwareStatus Nodes API response code
# TODO. PATCH /State/Components/BulkSoftwareStatus Nodes API response body
# TODO. GET /State/Components/{xname} Updated BulkSoftwareStatus NodeA API response code
# TODO. GET /State/Components/{xname} Updated BulkSoftwareStatus NodeA API response body
# TODO. GET /State/Components/{xname} Updated BulkSoftwareStatus NodeB API response code
# TODO. GET /State/Components/{xname} Updated BulkSoftwareStatus NodeB API response body
# TODO. GET /State/Components/{xname} Non-Updated BulkSoftwareStatus Node API response code
# TODO. GET /State/Components/{xname} Non-Updated BulkSoftwareStatus Node API response body

# TODO. PATCH /State/Components/{xname}/SoftwareStatus Node API response code
# TODO. PATCH /State/Components/{xname}/SoftwareStatus Node API response body
# TODO. GET /State/Components/{xname} Updated SoftwareStatus Node API response code
# TODO. GET /State/Components/{xname} Updated SoftwareStatus Node API response body

#TODO TODO: these are disabled due to a bug
# TODO. PATCH /State/Components/BulkRole Nodes API response code
# TODO. PATCH /State/Components/BulkRole Nodes API response body
# TODO. GET /State/Components/{xname} Updated BulkRole NodeA API response code
# TODO. GET /State/Components/{xname} Updated BulkRole NodeA API response body
# TODO. GET /State/Components/{xname} Updated BulkRole NodeB API response code
# TODO. GET /State/Components/{xname} Updated BulkRole NodeB API response body
# TODO. GET /State/Components/{xname} Non-Updated BulkRole Node API response code
# TODO. GET /State/Components/{xname} Non-Updated BulkRole Node API response body

# TODO. PATCH /State/Components/{xname}/Role Node API response code
# TODO. PATCH /State/Components/{xname}/Role Node API response body
# TODO. GET /State/Components/{xname} Updated Role Node API response code
# TODO. GET /State/Components/{xname} Updated Role Node API response body

# TODO. PATCH /State/Components/BulkNID Nodes API response code
# TODO. PATCH /State/Components/BulkNID Nodes API response body
# TODO. GET /State/Components/{xname} Updated BulkNID NodeA API response code
# TODO. GET /State/Components/{xname} Updated BulkNID NodeA API response body
# TODO. GET /State/Components/{xname} Updated BulkNID NodeB API response code
# TODO. GET /State/Components/{xname} Updated BulkNID NodeB API response body
# TODO. GET /State/Components/{xname} Non-Updated BulkNID Node API response code
# TODO. GET /State/Components/{xname} Non-Updated BulkNID Node API response body

# TODO. PATCH /State/Components/{xname}/NID Node API response code
# TODO. PATCH /State/Components/{xname}/NID Node API response body
# TODO. GET /State/Components/{xname} Updated NID Node API response code
# TODO. GET /State/Components/{xname} Updated NID Node API response body
---
test_name: hsmAPIstateComponents

stages:
  #TODO. DELETE /State/Components API response code
  #TODO. DELETE /State/Components API response body
  - name: hsmAPIstateComponentsDELETE - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: DELETE
      verify: !bool "{verify}"

  #TODO. DELETE /State/Components No Components API response code
  #TODO. DELETE /State/Components No Components API response body
  - name: hsmAPIstateComponentsDELETEnoComponents - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no entries to delete"
              status:
                type: int
                required: True
                enum:
                  #TODO: Does Not Exist example in Swagger shows 400
                  - 404

  # TODO. GET /State/Components No Components API response code
  # TODO. GET /State/Components No Components API response body
  - name: hsmAPIstateComponentsGETnoComponents - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      json:
        Components: !anything

  # TODO. POST /State/Components Node API response code
  # TODO. POST /State/Components Node API response body
  - name: hsmAPIstateComponentsPOSTnode - Create a Node component using POST.
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7s9b9n9","Type":"Node","State":"On","Flag":"OK","Enabled":true,"SoftwareStatus":"AdminStatus","Role":"Compute","NID":9999999999,"NetType":"Sling","Arch":"X86","Class":"River"}],"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. GET /State/Components API response code
  # TODO. GET /State/Components API response body
  - name: hsmAPIstateComponentsGET - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      json:
        Components: !anything

  # TODO. GET /State/Components?id={id} Node Parameter API response code
  # TODO. GET /State/Components?id={id} Node Parameter API response body
  - name: hsmAPIstateComponentsGETidParamNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?id=x9999c7s9b9n9"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n9"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "On"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "AdminStatus"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999999
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. PUT /State/Components/{xname} Existing Node No Force API response code
  # TODO. PUT /State/Components/{xname} Existing Node No Force API response body
  - name: hsmAPIstateComponentsPUTnodeExistsNoForce - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9n9"
      method: PUT
      verify: !bool "{verify}"
      json: {"Component":{"ID":"x9999c7s9b9n9","Type":"Node","State":"Standby","Flag":"Alert","Enabled":true,"SoftwareStatus":"AdminStatus","Role":"Compute","NID":9999999999,"NetType":"Infiniband","Arch":"ARM","Class":"River"},"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. GET /State/Components/{xname} Node API response code
  # TODO. GET /State/Components/{xname} Node API response body
  - name: hsmAPIstateComponentsGETxnameNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9n9"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b9n9"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "On"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "AdminStatus"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              NID:
                type: int
                required: True
                enum:
                  - 9999999999
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. PUT /State/Components/{xname} Existing Node Force API response code
  # TODO. PUT /State/Components/{xname} Existing Node Force API response body
  - name: hsmAPIstateComponentsPUTnodeExistsForce - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9n9"
      method: PUT
      verify: !bool "{verify}"
      json: {"Component":{"ID":"x9999c7s9b9n9","Type":"Node","State":"Standby","Flag":"Alert","Enabled":true,"SoftwareStatus":"AdminStatus","Role":"Compute","NID":9999999999,"NetType":"Infiniband","Arch":"ARM","Class":"River"},"Force":true}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. GET /State/Components/{xname} Node API response code
  # TODO. GET /State/Components/{xname} Node API response body
  - name: hsmAPIstateComponentsGETxnameNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9n9"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b9n9"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "Alert"
              Enabled:
                type: bool
                required: True
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "AdminStatus"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              NID:
                type: int
                required: True
                enum:
                  - 9999999999
              NetType:
                type: str
                required: True
                enum:
                  - "Infiniband"
              Arch:
                type: str
                required: True
                enum:
                  - "ARM"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. DELETE /State/Components/{xname} Node API response code
  # TODO. DELETE /State/Components/{xname} Node API response body
  - name: hsmAPIstateComponentsDELETExname - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9n9"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              code:
                type: int
                required: True
                enum:
                  - 0
              message:
                type: str
                required: True
                enum:
                  - "deleted 1 entry"

  # TODO. DELETE /State/Components/{xname} Missing Node API response code
  # TODO. DELETE /State/Components/{xname} Missing Node API response body
  - name: hsmAPIstateComponentsDELETExnameMissing - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9n9"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no such xname."
              status:
                type: int
                required: True
                enum:
                  #TODO: Does Not Exist example in Swagger shows 400
                  - 404

  # TODO. GET /State/Components/{xname} Missing Node API response code
  # TODO. GET /State/Components/{xname} Missing Node API response body
  - name: hsmAPIstateComponentsGETidMissingNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9n9"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no such xname."
              status:
                type: int
                required: True
                enum:
                  #TODO: Does Not Exist example in Swagger shows 400
                  - 404

  # TODO. GET /State/Components/ByNID/{nid} Missing NID API response code
  # TODO. GET /State/Components/ByNID/{nid} Missing NID API response body
  - name: hsmAPIstateComponentsByNidGETmissingNid - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/9999999999"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no such NID."
              status:
                type: int
                required: True
                enum:
                  #TODO: Does Not Exist example in Swagger shows 400
                  - 404

  # TODO. PUT /State/Components/{xname} Non-Existing Node API response code
  # TODO. PUT /State/Components/{xname} Non-Existing Node API response body
  - name: hsmAPIstateComponentsPUTdoesntExistNoForce - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9n9"
      method: PUT
      verify: !bool "{verify}"
      json: {"Component":{"ID":"x9999c7s9b9n9","Type":"Node","State":"Ready","Flag":"OK","Enabled":true,"SoftwareStatus":"AdminStatus","Role":"Compute","NID":9999999999,"NetType":"Ethernet","Arch":"Other","Class":"River"},"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. GET /State/Components/{xname} Node API response code
  # TODO. GET /State/Components/{xname} Node API response body
  - name: hsmAPIstateComponentsGETxnameNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9n9"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b9n9"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Ready"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "AdminStatus"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              NID:
                type: int
                required: True
                enum:
                  - 9999999999
              NetType:
                type: str
                required: True
                enum:
                  - "Ethernet"
              Arch:
                type: str
                required: True
                enum:
                  - "Other"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. DELETE /State/Components API response code
  # TODO. DELETE /State/Components API response body
  - name: hsmAPIstateComponentsDELETE - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              code:
                type: int
                required: True
                enum:
                  - 0
              message:
                type: str
                required: True
                enum:
                  - "deleted 1 entries"

  # TODO. POST /State/Components NodeBMC API response code
  # TODO. POST /State/Components NodeBMC API response body
  - name: hsmAPIstateComponentsPOSTnodeBMC - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7s9b9","Type":"NodeBMC","State":"Ready","Flag":"OK","Enabled":true,"Role":"Management","NetType":"Sling","Arch":"X86","Class":"River","Locked":false}],"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. POST /State/Components NodeBMC Existing NodeBMC No Force API response code
  # TODO. POST /State/Components NodeBMC Existing NodeBMC No Force API response body
  - name: hsmAPIstateComponentsPOSTnodeBMCexistsNoForce - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7s9b9","Type":"NodeBMC","State":"Off","Flag":"Warning","Enabled":false,"Role":"Management","NetType":"Infiniband","Arch":"ARM","Class":"Mountain","Locked":true}],"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. GET /State/Components/{xname} NodeBMC API response code
  # TODO. GET /State/Components/{xname} NodeBMC API response body
  - name: hsmAPIstateComponentsGETxnameNodeBMC - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b9"
              Type:
                type: str
                required: True
                enum:
                  - "NodeBMC"
              State:
                type: str
                required: True
                enum:
                  - "Ready"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
              Role:
                type: str
                required: True
                enum:
                  - "Management"
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. POST /State/Components NodeBMC Existing NodeBMC Force API response code
  # TODO. POST /State/Components NodeBMC Existing NodeBMC Force API response body
  - name: hsmAPIstateComponentsPOSTnodeBMCexistsForce - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7s9b9","Type":"NodeBMC","State":"Off","Flag":"Warning","Enabled":false,"Role":"Management","NetType":"Infiniband","Arch":"ARM","Class":"Mountain","Locked":true}],"Force":true}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. GET /State/Components/{xname} NodeBMC API response code
  # TODO. GET /State/Components/{xname} NodeBMC API response body
  - name: hsmAPIstateComponentsGETxnameNodeBMC - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b9"
              Type:
                type: str
                required: True
                enum:
                  - "NodeBMC"
              State:
                type: str
                required: True
                enum:
                  - "Off"
              Flag:
                type: str
                required: True
                enum:
                  - "Warning"
              Enabled:
                type: bool
                required: True
              Role:
                type: str
                required: True
                enum:
                  - "Management"
              NetType:
                type: str
                required: True
                enum:
                  - "Infiniband"
              Arch:
                type: str
                required: True
                enum:
                  - "ARM"
              Class:
                type: str
                required: True
                enum:
                  #TODO: Swagger says "If the component already exists it will not be overwritten unless force=true
                  # in which case State, Flag, Subtype, NetType, and Arch will get overwritten." This test case shows
                  # that Class also gets overwritten.
                  #- "River"
                  - "Mountain"

  # TODO. POST /State/Components Nodes API response code
  # TODO. POST /State/Components Nodes API response body
  - name: hsmAPIstateComponentsPOSTnodes - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      #TODO: Enum for Flag missing Unknown in Swagger
      #TODO: Enum for Arch missing Unknown in Swagger
      json: {"Components":[{"ID":"x9999c7s9b9n8","Type":"Node","State":"Unknown","Flag":"Unknown","Enabled":true,"SoftwareStatus":"TestStatus8","Role":"Compute","SubRole":"Master","NID":9999999998,"NetType":"Sling","Arch":"X86","Class":"River"},{"ID":"x9999c7s9b9n7","Type":"Node","State":"Empty","Flag":"OK","Enabled":true,"SoftwareStatus":"TestStatus7","Role":"Service","SubRole":"Worker","NID":9999999997,"NetType":"Infiniband","Arch":"X86","Class":"River"},{"ID":"x9999c7s9b9n6","Type":"Node","State":"Populated","Flag":"Warning","Enabled":true,"SoftwareStatus":"TestStatus6","Role":"System","SubRole":"Storage","NID":9999999996,"NetType":"Ethernet","Arch":"ARM","Class":"River"},{"ID":"x9999c7s9b9n5","Type":"Node","State":"Off","Flag":"Warn","Enabled":true,"SoftwareStatus":"TestStatus5","Role":"Application","SubRole":"Master","NID":9999999995,"NetType":"OEM","Arch":"ARM","Class":"Mountain"},{"ID":"x9999c7s9b9n4","Type":"Node","State":"On","Flag":"Alert","Enabled":false,"SoftwareStatus":"TestStatus4","Role":"Storage","SubRole":"Worker","NID":9999999994,"NetType":"None","Arch":"Other","Class":"Mountain"},{"ID":"x9999c7s9b9n3","Type":"Node","State":"Standby","Flag":"Locked","Enabled":false,"SoftwareStatus":"TestStatus3","Role":"Management","SubRole":"Storage","NID":9999999993,"NetType":"Sling","Arch":"Other","Class":"Mountain"},{"ID":"x9999c7s9b9n2","Type":"Node","State":"Halt","Flag":"OK","Enabled":false,"SoftwareStatus":"TestStatus2","Role":"Compute","SubRole":"Master","NID":9999999992,"NetType":"Sling","Arch":"Unknown","Class":"Hill"},{"ID":"x9999c7s9b9n1","Type":"Node","State":"Ready","Flag":"OK","Enabled":false,"SoftwareStatus":"TestStatus1","Role":"Compute","SubRole":"Worker","NID":9999999991,"NetType":"Sling","Arch":"Unknown","Class":"Hill"},{"ID":"x9999c7s9b9n0","Type":"Node","State":"Ready","Flag":"OK","Enabled":true,"SoftwareStatus":"TestStatus0","Role":"Compute","SubRole":"Storage","NID":9999999990,"NetType":"Sling","Arch":"X86","Class":"Hill"}],"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. POST /State/Components NodeEnclosure API response code
  # TODO. POST /State/Components NodeEnclosure API response body
  - name: hsmAPIstateComponentsPOSTnodeEnclosure - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7s9e9","Type":"NodeEnclosure","State":"On","Flag":"OK","Enabled":false,"NetType":"Sling","Arch":"X86","Class":"Mountain"}],"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. POST /State/Components RouterBMC and RouterModule API response code
  # TODO. POST /State/Components RouterBMC and RouterModule API response body
  - name: hsmAPIstateComponentsPOSTrouterBMCandRouterModule - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7r9b9","Type":"RouterBMC","State":"Ready","Flag":"OK","Enabled":true,"NetType":"Sling","Arch":"X86","Class":"Mountain"},{"ID":"x9999c7r9","Type":"RouterModule","State":"Empty","Flag":"OK","Enabled":true,"NetType":"Sling","Arch":"X86","Class":"Mountain"}],"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. POST /State/Components Chassis and ChassisBMC API response code
  # TODO. POST /State/Components Chassis and ChassisBMC API response body
  - name: hsmAPIstateComponentsPOSTchassisAndChassisBMC - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7","Type":"Chassis","State":"Off","Flag":"OK","Enabled":true,"NetType":"Sling","Arch":"X86","Class":"Mountain"},{"ID":"x9999c7b0","Type":"ChassisBMC","State":"Ready","Flag":"OK","Enabled":true,"NetType":"Sling","Arch":"X86","Class":"Mountain"}],"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. POST /State/Components HSNBoard and CabinetPDUController API response code
  # TODO. POST /State/Components HSNBoard and CabinetPDUController API response body
  - name: hsmAPIstateComponentsPOSThsnBoardandCabinetPDUController - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7r9e9","Type":"HSNBoard","State":"On","Flag":"Warning","Enabled":false,"NetType":"Sling","Arch":"X86","Class":"River"},{"ID":"x9999m3","Type":"CabinetPDUController","State":"Ready","Flag":"OK","Enabled":true,"NetType":"Infiniband","Arch":"X86"}],"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. GET /State/Components?type={type} CabinetPDUController Parameter API response code
  # TODO. GET /State/Components?type={type} CabinetPDUController Parameter API response body
  - name: hsmAPIstateComponentsGETtypeParamCabinetPDUController - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=CabinetPDUController"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999m3"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "CabinetPDUController"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Ready"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Infiniband"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"

  # TODO. GET /State/Components?type={type} ChassisBMC Parameter API response code
  # TODO. GET /State/Components?type={type} ChassisBMC Parameter API response body
  - name: hsmAPIstateComponentsGETtypeParamChassisBMC - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=ChassisBMC"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7b0"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "ChassisBMC"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Ready"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?type={type} Chassis Parameter API response code
  # TODO. GET /State/Components?type={type} Chassis Parameter API response body
  - name: hsmAPIstateComponentsGETtypeParamChassis - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Chassis"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Chassis"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Off"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?type={type} HSNBoard Parameter API response code
  # TODO. GET /State/Components?type={type} HSNBoard Parameter API response body
  - name: hsmAPIstateComponentsGETtypeParamHSNBoard - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=HSNBoard"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7r9e9"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "HSNBoard"
                      State:
                        type: str
                        required: True
                        enum:
                          - "On"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components?type={type} NodeBMC Parameter API response code
  # TODO. GET /State/Components?type={type} NodeBMC Parameter API response body
  - name: hsmAPIstateComponentsGETtypeParamNodeBMC - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=NodeBMC"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "NodeBMC"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Off"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Management"
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Infiniband"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?type={type} NodeEnclosure Parameter API response code
  # TODO. GET /State/Components?type={type} NodeEnclosure Parameter API response body
  - name: hsmAPIstateComponentsGETtypeParamNodeEnclosure - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=NodeEnclosure"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9e9"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "NodeEnclosure"
                      State:
                        type: str
                        required: True
                        enum:
                          - "On"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?type={type} Node Parameter API response code
  # TODO. GET /State/Components?type={type} Node Parameter API response body
  - name: hsmAPIstateComponentsGETtypeParamNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Node"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        pattern: "^x([0-9]{{1,4}})c([0-7])s([0-9]+)b([0-9]+)n([0-9]+)$"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                      NID:
                        type: int
                        required: True
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components?type={type} RouterBMC Parameter API response code
  # TODO. GET /State/Components?type={type} RouterBMC Parameter API response body
  - name: hsmAPIstateComponentsGETtypeParamRouterBMC - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=RouterBMC"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7r9b9"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "RouterBMC"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Ready"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?type={type} RouterModule Parameter API response code
  # TODO. GET /State/Components?type={type} RouterModule Parameter API response body
  - name: hsmAPIstateComponentsGETtypeParamRouterModule - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=RouterModule"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7r9"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "RouterModule"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Empty"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?state={state} Unknown Parameter StateOnly API response code
  # TODO. GET /State/Components?state={state} Unknown Parameter StateOnly API response body
  - name: hsmAPIstateComponentsGETstateParamUnknownStateOnly - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?state=Unknown&stateonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Unknown"

  # TODO. GET /State/Components?state={state} Empty Parameter API response code
  # TODO. GET /State/Components?state={state} Empty Parameter API response body
  - name: hsmAPIstateComponentsGETstateParamEmpty - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?state=Empty"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                        enum:
                          - "Empty"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components?state={state} Populated Parameter API response code
  # TODO. GET /State/Components?state={state} Populated Parameter API response body
  - name: hsmAPIstateComponentsGETstateParamPopulated - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?state=Populated"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Populated"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus6"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "System"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Ethernet"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components?state={state} Off Parameter API response code
  # TODO. GET /State/Components?state={state} Off Parameter API response body
  - name: hsmAPIstateComponentsGETstateParamOff - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?state=Off"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                        enum:
                          - "Off"
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?state={state} On Parameter API response code
  # TODO. GET /State/Components?state={state} On Parameter API response body
  - name: hsmAPIstateComponentsGETstateParamOn - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?state=On"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                        enum:
                          - "On"
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components?state={state} Standby Parameter API response code
  # TODO. GET /State/Components?state={state} Standby Parameter API response body
  - name: hsmAPIstateComponentsGETstateParamStandby - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?state=Standby"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n3"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Standby"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Locked"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus3"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Management"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999993
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "Other"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?state={state} Halt Parameter API response code
  # TODO. GET /State/Components?state={state} Halt Parameter API response body
  - name: hsmAPIstateComponentsGETstateParamHalt - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?state=Halt"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n2"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Halt"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus2"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999992
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "UNKNOWN"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Hill"

  # TODO. GET /State/Components?state={state} Ready Parameter API response code
  # TODO. GET /State/Components?state={state} Ready Parameter API response body
  - name: hsmAPIstateComponentsGETstateParamReady - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?state=Ready"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                        enum:
                          - "Ready"
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: False

  # TODO. GET /State/Components?flag={flag} OK Parameter FlagOnly API response code
  # TODO. GET /State/Components?flag={flag} OK Parameter FlagOnly API response body
  - name: hsmAPIstateComponentsGETflagParamOKflagOnly - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?flag=OK&flagonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"

  # TODO. GET /State/Components?flag={flag} Warning Parameter API response code
  # TODO. GET /State/Components?flag={flag} Warning Parameter API response body
  - name: hsmAPIstateComponentsGETflagParamWarning - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?flag=Warning"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components?flag={flag} Alert Parameter API response code
  # TODO. GET /State/Components?flag={flag} Alert Parameter API response body
  - name: hsmAPIstateComponentsGETflagParamAlert - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?flag=Alert"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n4"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "On"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Alert"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus4"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Worker"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999994
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "None"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "Other"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?flag={flag} Locked Parameter API response code
  # TODO. GET /State/Components?flag={flag} Locked Parameter API response body
  - name: hsmAPIstateComponentsGETflagParamLocked - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?flag=Locked"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n3"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Standby"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Locked"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus3"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Management"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999993
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "Other"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?role={role} Compute Parameter RoleOnly API response code
  # TODO. GET /State/Components?role={role} Compute Parameter RoleOnly API response body
  - name: hsmAPIstateComponentsGETroleParamComputeRoleOnly - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?role=Compute&roleonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True

  # TODO. GET /State/Components?role={role} Service Parameter API response code
  # TODO. GET /State/Components?role={role} Service Parameter API response body
  - name: hsmAPIstateComponentsGETroleParamService - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?role=Service"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n7"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Empty"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus7"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Service"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Worker"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999997
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Infiniband"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components?role={role} System Parameter API response code
  # TODO. GET /State/Components?role={role} System Parameter API response body
  - name: hsmAPIstateComponentsGETroleParamSystem - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?role=System"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Populated"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus6"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "System"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Ethernet"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components?role={role} Application Parameter API response code
  # TODO. GET /State/Components?role={role} Application Parameter API response body
  - name: hsmAPIstateComponentsGETroleParamApplication - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?role=Application"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n5"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Off"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus5"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Application"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999995
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "OEM"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?role={role} Storage Parameter API response code
  # TODO. GET /State/Components?role={role} Storage Parameter API response body
  - name: hsmAPIstateComponentsGETroleParamStorage - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?role=Storage"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n4"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "On"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Alert"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus4"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Worker"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999994
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "None"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "Other"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?role={role} Management Parameter API response code
  # TODO. GET /State/Components?role={role} Management Parameter API response body
  - name: hsmAPIstateComponentsGETroleParamManagement - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?role=Management"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Management"
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?subrole={subrole} Master Parameter API response code
  # TODO. GET /State/Components?subrole={subrole} Master Parameter API response body
  - name: hsmAPIstateComponentsGETsubroleParamMaster - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?subrole=Master"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components?subrole={subrole} Worker Parameter API response code
  # TODO. GET /State/Components?subrole={subrole} Worker Parameter API response body
  - name: hsmAPIstateComponentsGETsubroleParamWorker - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?subrole=Worker"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Worker"
                      NID:
                        type: int
                        required: True
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components?subrole={subrole} Storage Parameter API response code
  # TODO. GET /State/Components?subrole={subrole} Storage Parameter API response body
  - name: hsmAPIstateComponentsGETsubroleParamStorage - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?subrole=Storage"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components?enabled={enabled} True Parameter API response code
  # TODO. GET /State/Components?enabled={enabled} True Parameter API response body
  - name: hsmAPIstateComponentsGETenabledParamTrue - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?enabled=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: False

  # TODO. GET /State/Components?enabled={enabled} False Parameter API response code
  # TODO. GET /State/Components?enabled={enabled} False Parameter API response body
  - name: hsmAPIstateComponentsGETenabledParamFalse - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?enabled=False"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - false
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: False

  # TODO. GET /State/Components?softwarestatus={softwarestatus} TestStatus Parameter API response code
  # TODO. GET /State/Components?softwarestatus={softwarestatus} TestStatus Parameter API response body
  - name: hsmAPIstateComponentsGETsoftwarestatusParamTestStatus - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?softwarestatus=TestStatus0"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n0"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Ready"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus0"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999990
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Hill"

  # TODO. GET /State/Components?arch={arch} X86 Parameter API response code
  # TODO. GET /State/Components?arch={arch} X86 Parameter API response body
  - name: hsmAPIstateComponentsGETarchParamX86 - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?arch=X86"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: False

  # TODO. GET /State/Components?arch={arch} ARM Parameter API response code
  # TODO. GET /State/Components?arch={arch} ARM Parameter API response body
  - name: hsmAPIstateComponentsGETarchParamARM - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?arch=ARM"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: False

  # TODO. GET /State/Components?arch={arch} Other Parameter API response code
  # TODO. GET /State/Components?arch={arch} Other Parameter API response body
  - name: hsmAPIstateComponentsGETarchParamOther - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?arch=Other"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "Other"
                      Class:
                        type: str
                        required: False

  # TODO. GET /State/Components?class={class} River Parameter API response code
  # TODO. GET /State/Components?class={class} River Parameter API response body
  - name: hsmAPIstateComponentsGETclassParamRiver - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?class=River"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components?class={class} Mountain Parameter API response code
  # TODO. GET /State/Components?class={class} Mountain Parameter API response body
  - name: hsmAPIstateComponentsGETclassParamMountain - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?class=Mountain"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components?class={class} Hill Parameter API response code
  # TODO. GET /State/Components?class={class} Hill Parameter API response body
  - name: hsmAPIstateComponentsGETclassParamHill - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?class=Hill"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                      Type:
                        type: str
                        required: True
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: False
                      Role:
                        type: str
                        required: False
                      SubRole:
                        type: str
                        required: False
                      NID:
                        type: int
                        required: False
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Hill"

  # TODO. GET /State/Components?nid={nid} NID NidOnly Parameter API response code
  # TODO. GET /State/Components?nid={nid} NID NidOnly Parameter API response body
  - name: hsmAPIstateComponentsGETnidParamNidOnly - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?nid=9999999990&nidonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n0"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999990

  # TODO. GET /State/Components?nid_start={nid_start} NID_Start Parameter API response code
  # TODO. GET /State/Components?nid_start={nid_start} NID_Start Parameter API response body
  - name: hsmAPIstateComponentsGETnidStartParam - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?nid_start=9999999996"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                          - "x9999c7s9b9n7"
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                          - 9999999997
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components?nid_start={nid_start}&nid_end={nid_end} NID_Start NID_End Parameters API response code
  # TODO. GET /State/Components?nid_start={nid_start}&nid_end={nid_end} NID_Start NID_End Parameters API response body
  - name: hsmAPIstateComponentsGETnidStartNidEndParams - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?nid_start=9999999996&nid_end=9999999997"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n7"
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999997
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components Many Parameters Existing Node API response code
  # TODO. GET /State/Components Many Parameters Existing Node API response body
  - name: hsmAPIstateComponentsGETManyParamsExistingNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?id=x9999c7s9b9n0&type=Node&state=Ready&flag=OK&enabled=true&softwarestatus=TestStatus0&role=Compute&subrole=Storage&nid=9999999990&nettype=Sling&arch=X86&class=Hill"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n0"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Ready"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus0"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999990
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Hill"

  # TODO. POST /State/Components/Query Existing Component API response code
  # TODO. POST /State/Components/Query Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTexistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n8"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus8"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/Query Type Node Existing Component API response code
  # TODO. POST /State/Components/Query Type Node Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTtypeNodeExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n8"],"Type":["Node"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus8"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/Query State Ready StateOnly Existing Component API response code
  # TODO. POST /State/Components/Query State Ready StateOnly Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTstateReadyStateOnlyExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n1"],"State":["Ready"],"stateonly":true}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n1"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Ready"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"

  # TODO. POST /State/Components/Query Flag OK FlagOnly Existing Component API response code
  # TODO. POST /State/Components/Query Flag OK FlagOnly Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTflagOkFlagOnlyExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n7"],"Flag":["OK"],"flagonly":true}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n7"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"

  # TODO. POST /State/Components/Query Enabled True Existing Component API response code
  # TODO. POST /State/Components/Query Enabled True Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTenabledTrueExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n6"],"Enabled":["true"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Populated"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus6"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "System"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Ethernet"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/Query SoftwareStatus Existing Component API response code
  # TODO. POST /State/Components/Query SoftwareStatus Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTsoftwareStatusExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n5"],"SoftwareStatus":["TestStatus5"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n5"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Off"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus5"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Application"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999995
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "OEM"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. POST /State/Components/Query Role Compute RoleOnly Existing Component API response code
  # TODO. POST /State/Components/Query Role Compute RoleOnly Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTroleComputeExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n2"],"Role":["Compute"],"roleonly":true}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n2"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"

  # TODO. POST /State/Components/Query SubRole Master Existing Component API response code
  # TODO. POST /State/Components/Query SubRole Master Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTsubRoleMasterExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n8"],"SubRole":["Master"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus8"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/Query Arch X86 Existing Component API response code
  # TODO. POST /State/Components/Query Arch X86 Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTarchX86ExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n7"],"Arch":["X86"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n7"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Empty"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus7"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Service"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Worker"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999997
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Infiniband"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/Query Class River Existing Component API response code
  # TODO. POST /State/Components/Query Class River Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTclassRiverExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n6"],"Class":["River"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Populated"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus6"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "System"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Ethernet"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/Query NID NidOnly Existing Component API response code
  # TODO. POST /State/Components/Query NID NidOnly Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTnidNidOnlyExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n3"],"NID":["9999999993"],"nidonly":true}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n3"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999993

  # TODO. POST /State/Components/Query NID_Start Existing Component API response code
  # TODO. POST /State/Components/Query NID_Start Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTnidStartExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n8","x9999c7s9b9n7","x9999c7s9b9n6"],"nid_start":["9999999996"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                          - "x9999c7s9b9n7"
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                          - 9999999997
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. POST /State/Components/Query NID_Start NID_End Existing Component API response code
  # TODO. POST /State/Components/Query NID_Start NID_End Existing Component API response body
  - name: hsmAPIstateComponentsQueryPOSTnidStartNidEndExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n8","x9999c7s9b9n7","x9999c7s9b9n6"],"nid_start":["9999999996"],"nid_end":["9999999997"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n7"
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999997
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. POST /State/Components/Query Many Parameters Existing Node API response code
  # TODO. POST /State/Components/Query Many Parameters Existing Node API response body
  - name: hsmAPIstateComponentsQueryPOSTmanyParametersExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b9n3"],"Type":["Node"],"State":["Standby"],"Flag":["Locked"],"Enabled":["false"],"SoftwareStatus":["TestStatus3"],"Role":["Management"],"SubRole":["Storage"],"Arch":["Other"],"Class":["Mountain"],"NID":["9999999993"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n3"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Standby"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Locked"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - false
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus3"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Management"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999993
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "Other"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. POST /State/Components/ByNID/Query Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTexistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999998"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus8"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/ByNID/Query Type Node Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query Type Node Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTtypeNodeExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999998"],"Type":["Node"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus8"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/ByNID/Query State Ready StateOnly Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query State Ready StateOnly Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTstateReadyStateOnlyExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999991"],"State":["Ready"],"stateonly":true}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n1"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Ready"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"

  # TODO. POST /State/Components/ByNID/Query Flag OK FlagOnly Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query Flag OK FlagOnly Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTflagOkFlagOnlyExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999997"],"Flag":["OK"],"flagonly":true}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n7"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"

  # TODO. POST /State/Components/ByNID/Query Enabled True Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query Enabled True Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTenabledTrueExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999996"],"Enabled":["true"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Populated"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus6"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "System"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Ethernet"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/ByNID/Query SoftwareStatus Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query SoftwareStatus Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTsoftwareStatusExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999995"],"SoftwareStatus":["TestStatus5"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n5"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Off"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus5"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Application"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999995
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "OEM"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. POST /State/Components/ByNID/Query Role Compute RoleOnly Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query Role Compute RoleOnly Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTroleComputeExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999995"],"Role":["Compute"],"roleonly":true}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n2"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"

  # TODO. POST /State/Components/ByNID/Query SubRole Master Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query SubRole Master Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTsubRoleMasterExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999998"],"SubRole":["Master"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus8"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/ByNID/Query Arch X86 Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query Arch X86 Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTarchX86ExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999997"],"Arch":["X86"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n7"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Empty"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus7"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Service"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Worker"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999997
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Infiniband"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/ByNID/Query Class River Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query Class River Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTclassRiverExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999996"],"Class":["River"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Populated"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus6"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "System"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Ethernet"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. POST /State/Components/ByNID/Query NID NidOnly Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query NID NidOnly Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTnidNidOnlyExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999993"],"NID":["9999999993"],"nidonly":true}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n3"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999993

  # TODO. POST /State/Components/ByNID/Query NID_Start Existing Component API response code
  # TODO. POST /State/Components/ByNID/Query NID_Start Existing Component API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTnidStartExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999996-9999999998"],"nid_start":["9999999996"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                          - "x9999c7s9b9n7"
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                          - 9999999997
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

#  # TODO. POST /State/Components/ByNID/Query NID_Start NID_End Existing Component API response code
#  # TODO. POST /State/Components/ByNID/Query NID_Start NID_End Existing Component API response body
##  - name: hsmAPIstateComponentsByNIDqueryPOSTnidStartNidEndExistingComponent - TODO
#    request:
#      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
#      method: POST
#      verify: !bool "{verify}"
#      #TODO: nid_start and nid_end parameters don't seem to work here, leave comment about this in bug regarding options not being documented in Swagger
#      json: {"NIDRanges":["9999999996-9999999998"],"nid_start":["9999999996"],"nid_end":["9999999997"]}
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              Components:
#                type: seq
#                matching: all
#                required: True
#                sequence:
#                  - type: map
#                    required: True
#                    mapping:
#                      ID:
#                        type: str
#                        required: True
#                        enum:
#                          - "x9999c7s9b9n7"
#                          - "x9999c7s9b9n6"
#                      Type:
#                        type: str
#                        required: True
#                        enum:
#                          - "Node"
#                      State:
#                        type: str
#                        required: True
#                      Flag:
#                        type: str
#                        required: True
#                      Enabled:
#                        type: bool
#                        required: True
#                      SoftwareStatus:
#                        type: str
#                        required: True
#                      Role:
#                        type: str
#                        required: True
#                      SubRole:
#                        type: str
#                        required: True
#                      NID:
#                        type: int
#                        required: True
#                        enum:
#                          - 9999999997
#                          - 9999999996
#                      NetType:
#                        type: str
#                        required: True
#                      Arch:
#                        type: str
#                        required: True
#                      Class:
#                        type: str
#                        required: True

  # TODO. POST /State/Components/ByNID/Query Many Parameters Existing Node API response code
  # TODO. POST /State/Components/ByNID/Query Many Parameters Existing Node API response body
  - name: hsmAPIstateComponentsByNIDqueryPOSTmanyParametersExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/Query"
      method: POST
      verify: !bool "{verify}"
      json: {"NIDRanges":["9999999993"],"Type":["Node"],"State":["Standby"],"Flag":["Locked"],"Enabled":["false"],"SoftwareStatus":["TestStatus3"],"Role":["Management"],"SubRole":["Storage"],"Arch":["Other"],"Class":["Mountain"]}
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n3"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Standby"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Locked"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - false
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus3"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Management"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999993
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "Other"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components/Query/{xname} Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETexistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n8"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus8"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components/Query/{xname} Type Node Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} Type Node Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETtypeNodeExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n8?type=Node"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus8"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components/Query/{xname} State Ready StateOnly Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} State Ready StateOnly Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETstateReadyStateOnlyExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n1?state=Ready&stateonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n1"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Ready"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"

  # TODO. GET /State/Components/Query/{xname} Flag OK FlagOnly Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} Flag OK FlagOnly Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETflagOkFlagOnlyExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n7?flag=OK&flagonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n7"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"

  # TODO. GET /State/Components/Query/{xname} Enabled True Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} Enabled True Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETenabledTrueExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n6?enabled=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Populated"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus6"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "System"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Ethernet"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components/Query/{xname} SoftwareStatus Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} SoftwareStatus Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETsoftwareStatusExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n5?softwarestatus=TestStatus5"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n5"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Off"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus5"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Application"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999995
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "OEM"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components/Query/{xname} Role Compute RoleOnly Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} Role Compute RoleOnly Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETroleComputeExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n2?role=Compute&roleonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n2"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"

  # TODO. GET /State/Components/Query/{xname} SubRole Master Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} SubRole Master Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETsubRoleMasterExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n8?subrole=Master"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Unknown"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus8"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Master"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components/Query/{xname} Arch X86 Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} Arch X86 Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETarchX86ExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n7?arch=X86"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n7"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Empty"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus7"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Service"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Worker"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999997
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Infiniband"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components/Query/{xname} Class River Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} Class River Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETclassRiverExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n6?class=River"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Populated"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Warning"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - true
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus6"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "System"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Ethernet"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "ARM"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # TODO. GET /State/Components/Query/{xname} NID NidOnly Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} NID NidOnly Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETnidNidOnlyExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n3?nid=9999999993&nidonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n3"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999993

  # TODO. GET /State/Components/Query/{xname} NID_Start Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} NID_Start Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETnidStartExistingComponent - TODO
    request:
      #TODO: weird, seems like the {xname} doesn't actually matter here
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n6?nid_start=9999999996"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n8"
                          - "x9999c7s9b9n7"
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999998
                          - 9999999997
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components/Query/{xname} NID_Start NID_End Existing Component API response code
  # TODO. GET /State/Components/Query/{xname} NID_Start NID_End Existing Component API response body
  - name: hsmAPIstateComponentsQueryXnameGETnidStartNidEndExistingComponent - TODO
    request:
      #TODO: weird, seems like the {xname} doesn't actually matter here
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n6?nid_start=9999999996&nid_end=9999999997"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n7"
                          - "x9999c7s9b9n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                      Flag:
                        type: str
                        required: True
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                      Role:
                        type: str
                        required: True
                      SubRole:
                        type: str
                        required: True
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999997
                          - 9999999996
                      NetType:
                        type: str
                        required: True
                      Arch:
                        type: str
                        required: True
                      Class:
                        type: str
                        required: True

  # TODO. GET /State/Components/Query/{xname} Many Parameters Existing Node API response code
  # TODO. GET /State/Components/Query/{xname} Many Parameters Existing Node API response body
  - name: hsmAPIstateComponentsQueryXnameGETmanyParametersExistingComponent - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/Query/x9999c7s9b9n3?type=Node&state=Standby&flag=Locked&enabled=False&SoftwareStatus=TestStatus3&role=Management&subrole=Storage&arch=Other&class=Mountain&NID=9999999993"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n3"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Standby"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "Locked"
                      Enabled:
                        type: bool
                        required: True
                        enum:
                          - false
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "TestStatus3"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Management"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999993
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "Other"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "Mountain"

  # TODO. GET /State/Components/ByNID/{nid} NodeA API response code
  # TODO. GET /State/Components/ByNID/{nid} NodeA API response body
  - name: hsmAPIstateComponentsByNidGETnidNodeA - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/9999999990"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b9n0"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Ready"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
                enum:
                  - true
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus0"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              SubRole:
                type: str
                required: True
                enum:
                  - "Storage"
              NID:
                type: int
                required: True
                enum:
                  - 9999999990
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "Hill"

  # TODO. GET /State/Components/ByNID/{nid} NodeB API response code
  # TODO. GET /State/Components/ByNID/{nid} NodeB API response body
  - name: hsmAPIstateComponentsByNidGETnidNodeB - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/ByNID/9999999998"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b9n8"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Unknown"
              Flag:
                type: str
                required: True
                enum:
                  - "Unknown"
              Enabled:
                type: bool
                required: True
                enum:
                  - true
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus8"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              SubRole:
                type: str
                required: True
                enum:
                  - "Master"
              NID:
                type: int
                required: True
                enum:
                  - 9999999998
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. POST /State/Components Nodes For Bulk Updates API response code
  # TODO. POST /State/Components Nodes For Bulk Updates API response body
  - name: hsmAPIstateComponentsPOSTnodesForBulkUpdates - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7s9b8n8","Type":"Node","State":"Ready","Flag":"OK","Enabled":true,"SoftwareStatus":"TestStatus8","Role":"Compute","SubRole":"Master","NID":9999999988,"NetType":"Sling","Arch":"X86","Class":"River"},{"ID":"x9999c7s9b8n7","Type":"Node","State":"On","Flag":"Alert","Enabled":true,"SoftwareStatus":"TestStatus7","Role":"Service","SubRole":"Worker","NID":9999999987,"NetType":"Infiniband","Arch":"Other","Class":"Mountain"},{"ID":"x9999c7s9b8n6","Type":"Node","State":"Off","Flag":"Warning","Enabled":true,"SoftwareStatus":"TestStatus6","Role":"System","SubRole":"Storage","NID":9999999986,"NetType":"Ethernet","Arch":"ARM","Class":"Hill"}],"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # TODO. PATCH /State/Components/BulkStateData Nodes State Flag API response code
  # TODO. PATCH /State/Components/BulkStateData Nodes State Flag API response body
  - name: hsmAPIstateComponentsBulkStateDataPATCHnodesStateFlag - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/BulkStateData"
      method: PATCH
      verify: !bool "{verify}"
      #TODO: Example payload shows force option but Swagger doesn't explain what it does, Force=false seemed to only update the first node x9999c7s9b8n8
      #json: {"ComponentIDs":["x9999c7s9b8n8","x9999c7s9b8n7"],"State":"Standby","Flag":"Alert","Force":false}
      json: {"ComponentIDs":["x9999c7s9b8n8","x9999c7s9b8n7"],"State":"Standby","Flag":"Alert","Force":true}
    response:
      status_code: 204

  # TODO. GET /State/Components/{xname} Updated BulkStateData NodeA API response code
  # TODO. GET /State/Components/{xname} Updated BulkStateData NodeA API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedBulkStateDataNodeA - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n8"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "Alert"
              Enabled:
                type: bool
                required: True
                enum:
                  - true
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus8"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              SubRole:
                type: str
                required: True
                enum:
                  - "Master"
              NID:
                type: int
                required: True
                enum:
                  - 9999999988
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. GET /State/Components/{xname} Updated BulkStateData NodeB API response code
  # TODO. GET /State/Components/{xname} Updated BulkStateData NodeB API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedBulkStateDataNodeB - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n7"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n7"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "Alert"
              Enabled:
                type: bool
                required: True
                enum:
                  - true
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus7"
              Role:
                type: str
                required: True
                enum:
                  - "Service"
              SubRole:
                type: str
                required: True
                enum:
                  - "Worker"
              NID:
                type: int
                required: True
                enum:
                  - 9999999987
              NetType:
                type: str
                required: True
                enum:
                  - "Infiniband"
              Arch:
                type: str
                required: True
                enum:
                  - "Other"
              Class:
                type: str
                required: True
                enum:
                  - "Mountain"

  # TODO. GET /State/Components/{xname} Non-Updated BulkStateData Node API response code
  # TODO. GET /State/Components/{xname} Non-Updated BulkStateData Node API response body
  - name: hsmAPIstateComponentsGETxnameNonUpdatedBulkStateDataNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n6"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n6"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Off"
              Flag:
                type: str
                required: True
                enum:
                  - "Warning"
              Enabled:
                type: bool
                required: True
                enum:
                  - true
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus6"
              Role:
                type: str
                required: True
                enum:
                  - "System"
              SubRole:
                type: str
                required: True
                enum:
                  - "Storage"
              NID:
                type: int
                required: True
                enum:
                  - 9999999986
              NetType:
                type: str
                required: True
                enum:
                  - "Ethernet"
              Arch:
                type: str
                required: True
                enum:
                  - "ARM"
              Class:
                type: str
                required: True
                enum:
                  - "Hill"

  # TODO. PATCH /State/Components/{xname}/StateData Node State No Flag API response code
  # TODO. PATCH /State/Components/{xname}/StateData Node State No Flag API response body
  - name: hsmAPIstateComponentsXnameStateDataPATCHnodeStateNoFlag - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n6/StateData"
      method: PATCH
      verify: !bool "{verify}"
      #TODO: Example payload shows force option but Swagger doesn't explain what it does, Force=false and Force=true seem to do the same thing here
      #json: {"State":"Ready","Flag":"OK","Force":false}
      json: {"State":"Ready","Force":true}
    response:
      status_code: 204

  # TODO. GET /State/Components?stateonly=True Updated Node API response code
  # TODO. GET /State/Components?stateonly=True Updated Node API response body
  - name: hsmAPIstateComponentsGETstateonlyParamUpdatedNodeStateData - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?id=x9999c7s9b8n6&stateonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b8n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "Ready"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"

  # TODO. GET /State/Components?flagonly=True Updated Node API response code
  # TODO. GET /State/Components?flagonly=True Updated Node API response body
  - name: hsmAPIstateComponentsGETflagonlyParamUpdatedNodeStateData - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?id=x9999c7s9b8n6&flagonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b8n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"

  # TODO. GET /State/Components?roleonly=True Updated Node API response code
  # TODO. GET /State/Components?roleonly=True Updated Node API response body
  - name: hsmAPIstateComponentsGETroleonlyParamUpdatedNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?id=x9999c7s9b8n6&roleonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b8n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "System"
                      SubRole:
                        type: str
                        required: True
                        enum:
                          - "Storage"

  # TODO. GET /State/Components?nidonly=True Updated Node API response code
  # TODO. GET /State/Components?nidonly=True Updated Node API response body
  - name: hsmAPIstateComponentsGETnidonlyParamUpdatedNode - Retrieve the component data for the updated Node using GET with the nidonly parameter.
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?id=x9999c7s9b8n6&nidonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b8n6"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999986

  # TODO. PATCH /State/Components/BulkFlagOnly Nodes API response code
  # TODO. PATCH /State/Components/BulkFlagOnly Nodes API response body
  - name: hsmAPIstateComponentsBulkFlagOnlyPATCHnodes - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/BulkFlagOnly"
      method: PATCH
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b8n7","x9999c7s9b8n6"],"Flag":"Warning"}
    response:
      status_code: 204

  # TODO. GET /State/Components/{xname} Updated BulkFlagOnly NodeA API response code
  # TODO. GET /State/Components/{xname} Updated BulkFlagOnly NodeA API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedBulkFlagOnlyNodeA - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n7"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n7"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "Warning"
              Enabled:
                type: bool
                required: True
                enum:
                  - true
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus7"
              Role:
                type: str
                required: True
                enum:
                  - "Service"
              SubRole:
                type: str
                required: True
                enum:
                  - "Worker"
              NID:
                type: int
                required: True
                enum:
                  - 9999999987
              NetType:
                type: str
                required: True
                enum:
                  - "Infiniband"
              Arch:
                type: str
                required: True
                enum:
                  - "Other"
              Class:
                type: str
                required: True
                enum:
                  - "Mountain"

  # TODO. GET /State/Components/{xname} Updated BulkFlagOnly NodeB API response code
  # TODO. GET /State/Components/{xname} Updated BulkFlagOnly NodeB API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedBulkFlagOnlyNodeB - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n6"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n6"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Ready"
              Flag:
                type: str
                required: True
                enum:
                  - "Warning"
              Enabled:
                type: bool
                required: True
                enum:
                  - true
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus6"
              Role:
                type: str
                required: True
                enum:
                  - "System"
              SubRole:
                type: str
                required: True
                enum:
                  - "Storage"
              NID:
                type: int
                required: True
                enum:
                  - 9999999986
              NetType:
                type: str
                required: True
                enum:
                  - "Ethernet"
              Arch:
                type: str
                required: True
                enum:
                  - "ARM"
              Class:
                type: str
                required: True
                enum:
                  - "Hill"

  # TODO. GET /State/Components/{xname} Non-Updated BulkFlagOnly Node API response code
  # TODO. GET /State/Components/{xname} Non-Updated BulkFlagOnly Node API response body
  - name: hsmAPIstateComponentsGETxnameNonUpdatedBulkFlagOnlyNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n8"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "Alert"
              Enabled:
                type: bool
                required: True
                enum:
                  - true
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus8"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              SubRole:
                type: str
                required: True
                enum:
                  - "Master"
              NID:
                type: int
                required: True
                enum:
                  - 9999999988
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. PATCH /State/Components/{xname}/FlagOnly Node API response code
  # TODO. PATCH /State/Components/{xname}/FlagOnly Node API response body
  - name: hsmAPIstateComponentsXnameFlagOnlyPATCHnode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8/FlagOnly"
      method: PATCH
      verify: !bool "{verify}"
      json: {"Flag":"OK"}
    response:
      status_code: 204

  # TODO. GET /State/Components?flagonly=True Updated Node API response code
  # TODO. GET /State/Components?flagonly=True Updated Node API response body
  - name: hsmAPIstateComponentsGETflagonlyParamUpdatedNodeFlagOnly - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?id=x9999c7s9b8n8&flagonly=True"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b8n8"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"

  # TODO. PATCH /State/Components/BulkEnabled Nodes API response code
  # TODO. PATCH /State/Components/BulkEnabled Nodes API response body
  - name: hsmAPIstateComponentsBulkEnabledPATCHnodes - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/BulkEnabled"
      method: PATCH
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b8n7","x9999c7s9b8n6"],"Enabled":false}
    response:
      status_code: 204

  # TODO. GET /State/Components/{xname} Updated BulkEnabled NodeA API response code
  # TODO. GET /State/Components/{xname} Updated BulkEnabled NodeA API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedBulkEnabledNodeA - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n7"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n7"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "Warning"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus7"
              Role:
                type: str
                required: True
                enum:
                  - "Service"
              SubRole:
                type: str
                required: True
                enum:
                  - "Worker"
              NID:
                type: int
                required: True
                enum:
                  - 9999999987
              NetType:
                type: str
                required: True
                enum:
                  - "Infiniband"
              Arch:
                type: str
                required: True
                enum:
                  - "Other"
              Class:
                type: str
                required: True
                enum:
                  - "Mountain"

  # TODO. GET /State/Components/{xname} Updated BulkEnabled NodeB API response code
  # TODO. GET /State/Components/{xname} Updated BulkEnabled NodeB API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedBulkEnabledNodeB - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n6"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n6"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Ready"
              Flag:
                type: str
                required: True
                enum:
                  - "Warning"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus6"
              Role:
                type: str
                required: True
                enum:
                  - "System"
              SubRole:
                type: str
                required: True
                enum:
                  - "Storage"
              NID:
                type: int
                required: True
                enum:
                  - 9999999986
              NetType:
                type: str
                required: True
                enum:
                  - "Ethernet"
              Arch:
                type: str
                required: True
                enum:
                  - "ARM"
              Class:
                type: str
                required: True
                enum:
                  - "Hill"

  # TODO. GET /State/Components/{xname} Non-Updated BulkEnabled Node API response code
  # TODO. GET /State/Components/{xname} Non-Updated BulkEnabled Node API response body
  - name: hsmAPIstateComponentsGETxnameNonUpdatedBulkEnabledNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n8"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
                enum:
                  - true
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus8"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              SubRole:
                type: str
                required: True
                enum:
                  - "Master"
              NID:
                type: int
                required: True
                enum:
                  - 9999999988
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. PATCH /State/Components/{xname}/Enabled Node API response code
  # TODO. PATCH /State/Components/{xname}/Enabled Node API response body
  - name: hsmAPIstateComponentsXnameEnabledPATCHnode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8/Enabled"
      method: PATCH
      verify: !bool "{verify}"
      json: {"Enabled":false}
    response:
      status_code: 204

  # TODO. GET /State/Components/{xname} Updated Enabled Node API response code
  # TODO. GET /State/Components/{xname} Updated Enabled Node API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedEnabledNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n8"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus8"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              SubRole:
                type: str
                required: True
                enum:
                  - "Master"
              NID:
                type: int
                required: True
                enum:
                  - 9999999988
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. PATCH /State/Components/BulkSoftwareStatus Nodes API response code
  # TODO. PATCH /State/Components/BulkSoftwareStatus Nodes API response body
  - name: hsmAPIstateComponentsBulkSoftwareStatusPATCHnodes - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/BulkSoftwareStatus"
      method: PATCH
      verify: !bool "{verify}"
      json: {"ComponentIDs":["x9999c7s9b8n7","x9999c7s9b8n6"],"SoftwareStatus":"UpdatedBulkSoftwareStatus"}
    response:
      status_code: 204

  # TODO. GET /State/Components/{xname} Updated BulkSoftwareStatus NodeA API response code
  # TODO. GET /State/Components/{xname} Updated BulkSoftwareStatus NodeA API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedBulkSoftwareStatusNodeA - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n7"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n7"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "Warning"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "UpdatedBulkSoftwareStatus"
              Role:
                type: str
                required: True
                enum:
                  - "Service"
              SubRole:
                type: str
                required: True
                enum:
                  - "Worker"
              NID:
                type: int
                required: True
                enum:
                  - 9999999987
              NetType:
                type: str
                required: True
                enum:
                  - "Infiniband"
              Arch:
                type: str
                required: True
                enum:
                  - "Other"
              Class:
                type: str
                required: True
                enum:
                  - "Mountain"

  # TODO. GET /State/Components/{xname} Updated BulkSoftwareStatus NodeB API response code
  # TODO. GET /State/Components/{xname} Updated BulkSoftwareStatus NodeB API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedBulkSoftwareStatusNodeB - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n6"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n6"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Ready"
              Flag:
                type: str
                required: True
                enum:
                  - "Warning"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "UpdatedBulkSoftwareStatus"
              Role:
                type: str
                required: True
                enum:
                  - "System"
              SubRole:
                type: str
                required: True
                enum:
                  - "Storage"
              NID:
                type: int
                required: True
                enum:
                  - 9999999986
              NetType:
                type: str
                required: True
                enum:
                  - "Ethernet"
              Arch:
                type: str
                required: True
                enum:
                  - "ARM"
              Class:
                type: str
                required: True
                enum:
                  - "Hill"

  # TODO. GET /State/Components/{xname} Non-Updated BulkSoftwareStatus Node API response code
  # TODO. GET /State/Components/{xname} Non-Updated BulkSoftwareStatus Node API response body
  - name: hsmAPIstateComponentsGETxnameNonUpdatedBulkSoftwareStatusNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n8"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "TestStatus8"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              SubRole:
                type: str
                required: True
                enum:
                  - "Master"
              NID:
                type: int
                required: True
                enum:
                  - 9999999988
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. PATCH /State/Components/{xname}/SoftwareStatus Node API response code
  # TODO. PATCH /State/Components/{xname}/SoftwareStatus Node API response body
  - name: hsmAPIstateComponentsXnameSoftwareStatusPATCHnode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8/SoftwareStatus"
      method: PATCH
      verify: !bool "{verify}"
      json: {"SoftwareStatus":"UpdatedXnameSoftwareStatus"}
    response:
      status_code: 204

  # TODO. GET /State/Components/{xname} Updated SoftwareStatus Node API response code
  # TODO. GET /State/Components/{xname} Updated SoftwareStatus Node API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedSoftwareStatusNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n8"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "UpdatedXnameSoftwareStatus"
              Role:
                type: str
                required: True
                enum:
                  - "Compute"
              SubRole:
                type: str
                required: True
                enum:
                  - "Master"
              NID:
                type: int
                required: True
                enum:
                  - 9999999988
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

#TODO: open bug on this, disabling these tests for now

#  # TODO. PATCH /State/Components/BulkRole Nodes API response code
#  # TODO. PATCH /State/Components/BulkRole Nodes API response body
#  - name: hsmAPIstateComponentsBulkRolePATCHnodes - TODO
#    request:
#      url: "{hsm_base_url}/hsm/v2/State/Components/BulkRole"
#      method: PATCH
#      verify: !bool "{verify}"
#      #TODO: Swagger shows Role and SubRole supplied here, but the PATCH fails when including a SubRole of "Master" or "Worker".
#      #json: {"ComponentIDs":["x9999c7s9b8n7","x9999c7s9b8n6"],"Role":"Compute","SubRole":"Master"}
#      #json: {"ComponentIDs":["x9999c7s9b8n7","x9999c7s9b8n6"],"Role":"Compute","SubRole":"Worker"}
#      #TODO: Oddly, "Storage" is accepted but the role changes don't show up in subsequent GETs on the component.
#      #json: {"ComponentIDs":["x9999c7s9b8n7","x9999c7s9b8n6"],"Role":"Compute","SubRole":"Storage"}
#      #TODO: Swagger says list of IDs and Role are required, when SubRole is not included it seems to clear the previously existing SubRole
#      #json: {"ComponentIDs":["x9999c7s9b8n7","x9999c7s9b8n6"],"Role":"Compute"}
#    response:
#      status_code: 204
#
#  # TODO. GET /State/Components/{xname} Updated BulkRole NodeA API response code
#  # TODO. GET /State/Components/{xname} Updated BulkRole NodeA API response body
#  - name: hsmAPIstateComponentsGETxnameUpdatedBulkRoleNodeA - TODO
#    request:
#      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n7"
#      method: GET
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              ID:
#                type: str
#                required: True
#                enum:
#                  - "x9999c7s9b8n7"
#              Type:
#                type: str
#                required: True
#                enum:
#                  - "Node"
#              State:
#                type: str
#                required: True
#                enum:
#                  - "Standby"
#              Flag:
#                type: str
#                required: True
#                enum:
#                  - "Warning"
#              Enabled:
#                type: bool
#                required: True
#                enum:
#                  - false
#              SoftwareStatus:
#                type: str
#                required: True
#                enum:
#                  - "UpdatedBulkSoftwareStatus"
#              Role:
#                type: str
#                required: True
#                enum:
#                  - "Compute"
#              SubRole:
#                type: str
#                required: True
#                enum:
#                  - "Storage"
#              NID:
#                type: int
#                required: True
#                enum:
#                  - 9999999987
#              NetType:
#                type: str
#                required: True
#                enum:
#                  - "Infiniband"
#              Arch:
#                type: str
#                required: True
#                enum:
#                  - "Other"
#              Class:
#                type: str
#                required: True
#                enum:
#                  - "Mountain"
#
#  # TODO. GET /State/Components/{xname} Updated BulkRole NodeB API response code
#  # TODO. GET /State/Components/{xname} Updated BulkRole NodeB API response body
#  - name: hsmAPIstateComponentsGETxnameUpdatedBulkRoleNodeB - TODO
#    request:
#      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n6"
#      method: GET
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              ID:
#                type: str
#                required: True
#                enum:
#                  - "x9999c7s9b8n6"
#              Type:
#                type: str
#                required: True
#                enum:
#                  - "Node"
#              State:
#                type: str
#                required: True
#                enum:
#                  - "Ready"
#              Flag:
#                type: str
#                required: True
#                enum:
#                  - "Warning"
#              Enabled:
#                type: bool
#                required: True
#                enum:
#                  - false
#              SoftwareStatus:
#                type: str
#                required: True
#                enum:
#                  - "UpdatedBulkSoftwareStatus"
#              Role:
#                type: str
#                required: True
#                enum:
#                  - "Compute"
#              SubRole:
#                type: str
#                required: True
#                enum:
#                  - "Storage"
#              NID:
#                type: int
#                required: True
#                enum:
#                  - 9999999986
#              NetType:
#                type: str
#                required: True
#                enum:
#                  - "Ethernet"
#              Arch:
#                type: str
#                required: True
#                enum:
#                  - "ARM"
#              Class:
#                type: str
#                required: True
#                enum:
#                  - "Hill"
#
#  # TODO. GET /State/Components/{xname} Non-Updated BulkRole Node API response code
#  # TODO. GET /State/Components/{xname} Non-Updated BulkRole Node API response body
#  - name: hsmAPIstateComponentsGETxnameNonUpdatedBulkRoleNode - TODO
#    request:
#      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8"
#      method: GET
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              ID:
#                type: str
#                required: True
#                enum:
#                  - "x9999c7s9b8n8"
#              Type:
#                type: str
#                required: True
#                enum:
#                  - "Node"
#              State:
#                type: str
#                required: True
#                enum:
#                  - "Standby"
#              Flag:
#                type: str
#                required: True
#                enum:
#                  - "OK"
#              Enabled:
#                type: bool
#                required: True
#                enum:
#                  - false
#              SoftwareStatus:
#                type: str
#                required: True
#                enum:
#                  - "UpdatedXnameSoftwareStatus"
#              Role:
#                type: str
#                required: True
#                enum:
#                  - "Compute"
#              SubRole:
#                type: str
#                required: True
#                enum:
#                  - "Master"
#              NID:
#                type: int
#                required: True
#                enum:
#                  - 9999999988
#              NetType:
#                type: str
#                required: True
#                enum:
#                  - "Sling"
#              Arch:
#                type: str
#                required: True
#                enum:
#                  - "X86"
#              Class:
#                type: str
#                required: True
#                enum:
#                  - "River"

  # TODO. PATCH /State/Components/{xname}/Role Node API response code
  # TODO. PATCH /State/Components/{xname}/Role Node API response body
  - name: hsmAPIstateComponentsXnameRolePATCHnode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8/Role"
      method: PATCH
      verify: !bool "{verify}"
      json: {"Role":"Service","SubRole":"Worker"}
    response:
      status_code: 204

  # TODO. GET /State/Components/{xname} Updated Role Node API response code
  # TODO. GET /State/Components/{xname} Updated Role Node API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedSoftwareStatusNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n8"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "UpdatedXnameSoftwareStatus"
              Role:
                type: str
                required: True
                enum:
                  - "Service"
              SubRole:
                type: str
                required: True
                enum:
                  - "Worker"
              NID:
                type: int
                required: True
                enum:
                  - 9999999988
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. PATCH /State/Components/BulkNID Nodes API response code
  # TODO. PATCH /State/Components/BulkNID Nodes API response body
  - name: hsmAPIstateComponentsBulkNidPATCHnodes - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/BulkNID"
      method: PATCH
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7s9b8n7","NID":9999999977},{"ID":"x9999c7s9b8n6","NID":9999999976}]}
    response:
      status_code: 204

  # TODO. GET /State/Components/{xname} Updated BulkNID NodeA API response code
  # TODO. GET /State/Components/{xname} Updated BulkNID NodeA API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedBulkNIDNodeA - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n7"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n7"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "Warning"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "UpdatedBulkSoftwareStatus"
              Role:
                type: str
                required: True
                enum:
                  - "Service"
              SubRole:
                type: str
                required: True
                enum:
                  - "Worker"
              NID:
                type: int
                required: True
                enum:
                  - 9999999977
              NetType:
                type: str
                required: True
                enum:
                  - "Infiniband"
              Arch:
                type: str
                required: True
                enum:
                  - "Other"
              Class:
                type: str
                required: True
                enum:
                  - "Mountain"

  # TODO. GET /State/Components/{xname} Updated BulkNID NodeB API response code
  # TODO. GET /State/Components/{xname} Updated BulkNID NodeB API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedBulkNIDNodeB - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n6"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n6"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Ready"
              Flag:
                type: str
                required: True
                enum:
                  - "Warning"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "UpdatedBulkSoftwareStatus"
              Role:
                type: str
                required: True
                enum:
                  - "System"
              SubRole:
                type: str
                required: True
                enum:
                  - "Storage"
              NID:
                type: int
                required: True
                enum:
                  - 9999999976
              NetType:
                type: str
                required: True
                enum:
                  - "Ethernet"
              Arch:
                type: str
                required: True
                enum:
                  - "ARM"
              Class:
                type: str
                required: True
                enum:
                  - "Hill"

  # TODO. GET /State/Components/{xname} Non-Updated BulkNID Node API response code
  # TODO. GET /State/Components/{xname} Non-Updated BulkNID Node API response body
  - name: hsmAPIstateComponentsGETxnameNonUpdatedBulkNIDNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n8"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "UpdatedXnameSoftwareStatus"
              Role:
                type: str
                required: True
                enum:
                  - "Service"
              SubRole:
                type: str
                required: True
                enum:
                  - "Worker"
              NID:
                type: int
                required: True
                enum:
                  - 9999999988
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"

  # TODO. PATCH /State/Components/{xname}/NID Node API response code
  # TODO. PATCH /State/Components/{xname}/NID Node API response body
  - name: hsmAPIstateComponentsXnameNidPATCHnode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8/NID"
      method: PATCH
      verify: !bool "{verify}"
      json: {"NID":9999999978}
    response:
      status_code: 204

  # TODO. GET /State/Components/{xname} Updated NID Node API response code
  # TODO. GET /State/Components/{xname} Updated NID Node API response body
  - name: hsmAPIstateComponentsGETxnameUpdatedNIDNode - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b8n8"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ID:
                type: str
                required: True
                enum:
                  - "x9999c7s9b8n8"
              Type:
                type: str
                required: True
                enum:
                  - "Node"
              State:
                type: str
                required: True
                enum:
                  - "Standby"
              Flag:
                type: str
                required: True
                enum:
                  - "OK"
              Enabled:
                type: bool
                required: True
                enum:
                  - false
              SoftwareStatus:
                type: str
                required: True
                enum:
                  - "UpdatedXnameSoftwareStatus"
              Role:
                type: str
                required: True
                enum:
                  - "Service"
              SubRole:
                type: str
                required: True
                enum:
                  - "Worker"
              NID:
                type: int
                required: True
                enum:
                  - 9999999978
              NetType:
                type: str
                required: True
                enum:
                  - "Sling"
              Arch:
                type: str
                required: True
                enum:
                  - "X86"
              Class:
                type: str
                required: True
                enum:
                  - "River"
