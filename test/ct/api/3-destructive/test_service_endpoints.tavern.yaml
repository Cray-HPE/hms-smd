# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the Hardware State Manager (HSM) service API
# Author: Mitch Schooler
# Service: Hardware State Manager

#######################################
# THIS TEST WILL DELETE ALL ENDPOINTS!!
#######################################

---
test_name: HSM Service Endpoint Collection

stages:
  - name: Get Service Endpoints
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ServiceEndpoints:
                type: seq
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      RedfishEndpointID:
                        type: str
                        required: True
                      RedfishType:
                        type: str
                        required: True
                      UUID:
                        type: str
                        required: True
                      OdataID:
                        type: str
                        required: True
                      RedfishEndpointFQDN:
                        type: str
                        required: True
                      RedfishURL:
                        type: str
                        required: True
                      ServiceEnabled:
                        type: bool
                        required: False
                      Actions:
                        type: map
                        required: False
                        mapping:
                          "#UpdateService.SimpleUpdate":
                            type: map
                            required: False
                            mapping:
                              target:
                                type: str
                                required: True
                              title:
                                type: str
                                required: True
                      ServiceInfo:
                        type: map
                        required: True
                        allowempty: True
      save:
        json:
          service: ServiceEndpoints[0].RedfishType

  - name: Get Service Endpoints for service
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/{service}"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              ServiceEndpoints:
                type: seq
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      RedfishEndpointID:
                        type: str
                        required: True
                      RedfishType:
                        type: str
                        required: True
                      UUID:
                        type: str
                        required: True
                      OdataID:
                        type: str
                        required: True
                      RedfishEndpointFQDN:
                        type: str
                        required: True
                      RedfishURL:
                        type: str
                        required: True
                      ServiceEnabled:
                        type: bool
                        required: False
                      Actions:
                        type: map
                        required: False
                        mapping:
                          "#UpdateService.SimpleUpdate":
                            type: map
                            required: False
                            mapping:
                              target:
                                type: str
                                required: True
                              title:
                                type: str
                                required: True
                      ServiceInfo:
                        type: map
                        required: True
                        allowempty: True
      save:
        json:
          xname: ServiceEndpoints[0].RedfishEndpointID

  - name: Get Service Endpoints for xname
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/{service}/RedfishEndpoints/{xname}"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              RedfishEndpointID:
                type: str
                required: True
              RedfishType:
                type: str
                required: True
              UUID:
                type: str
                required: True
              OdataID:
                type: str
                required: True
              RedfishEndpointFQDN:
                type: str
                required: True
              RedfishURL:
                type: str
                required: True
              ServiceEnabled:
                type: bool
                required: False
              Actions:
                type: map
                required: False
                mapping:
                  "#UpdateService.SimpleUpdate":
                    type: map
                    required: False
                    mapping:
                      target:
                        type: str
                        required: True
                      title:
                        type: str
                        required: True
              ServiceInfo:
                type: map
                required: True
                allowempty: True

  - name: Delete Service Endpoints for xname
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/{service}/RedfishEndpoints/{xname}"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 200
      json:
        code: 0
        message: deleted 1 entry

  - name: Get Service Endpoints for xname NOT FOUND
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/{service}/RedfishEndpoints/{xname}"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 404
      json:
        type: about:blank
        title: Not Found
        detail: no such service under redfish endpoint.
        status: 404

  - name: Delete ALL Service Endpoints
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 200
      json:
        code: 0
        message: !anystr

  - name: Delete ALL Service Endpoints - None to delete
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 404
      json:
        type: about:blank
        title: Not Found
        detail: no entries to delete
        status: 404
