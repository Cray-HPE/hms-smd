# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the Hardware State Manager (HSM) service API
# Author: Mitch Schooler
# Service: Hardware State Manager

# HMS test metrics test cases: TODO
# 1. POST /State/Components Node API response code
# 2. POST /State/Components Node API response body
# 3. GET /State/Components API response code
# 4. GET /State/Components API response body
# 5. GET /State/Components?id={xname} Node API response code
# 6. GET /State/Components?id={xname} Node API response body
# 7. DELETE /State/Components?id={xname} Node API response code
# 8. DELETE /State/Components?id={xname} Node API response body
---
test_name: hsmAPIStateComponents

stages:
  # 1. POST /State/Components API response code
  # 2. POST /State/Components API response body
  - name: hsmAPIStateComponentsPOST
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: POST
      verify: !bool "{verify}"
      json: {"Components":[{"ID":"x9999c7s9b9n9","Type":"Node","State":"On","Flag":"OK","Enabled":true,"SoftwareStatus":"AdminStatus","Role":"Compute","NID":9999999999,"NetType":"Sling","Arch":"X86","Class":"River"}],"Force":false}
    response:
      #TODO: returns 204, Swagger says it will be 200
      status_code: 204
      #TODO: returns no response body, Swagger says it will have a response body

  # 3. GET /State/Components API response code
  # 4. GET /State/Components API response body
  - name: hsmAPIStateComponentsGET
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      json:
        Components: !anything

  # 5. GET /State/Components?id={xname} API response code
  # 6. GET /State/Components?id={xname} API response body
  - name: hsmAPIStateComponentsGETid
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?id=x9999c7s9b9n9"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              Components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      ID:
                        type: str
                        required: True
                        enum:
                          - "x9999c7s9b9n9"
                      Type:
                        type: str
                        required: True
                        enum:
                          - "Node"
                      State:
                        type: str
                        required: True
                        enum:
                          - "On"
                      Flag:
                        type: str
                        required: True
                        enum:
                          - "OK"
                      Enabled:
                        type: bool
                        required: True
                      SoftwareStatus:
                        type: str
                        required: True
                        enum:
                          - "AdminStatus"
                      Role:
                        type: str
                        required: True
                        enum:
                          - "Compute"
                      NID:
                        type: int
                        required: True
                        enum:
                          - 9999999999 
                      NetType:
                        type: str
                        required: True
                        enum:
                          - "Sling"
                      Arch:
                        type: str
                        required: True
                        enum:
                          - "X86"
                      Class:
                        type: str
                        required: True
                        enum:
                          - "River"

  # 7. DELETE /State/Components?id={xname} Node API response code
  # 8. DELETE /State/Components?id={xname} Node API response body
  - name: hsmAPIStateComponentsDELETEid
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components/x9999c7s9b9n9"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              code:
                type: int
                required: True
                enum:
                  - 0
              message:
                type: str
                required: True
                enum:
                  - "deleted 1 entry"
